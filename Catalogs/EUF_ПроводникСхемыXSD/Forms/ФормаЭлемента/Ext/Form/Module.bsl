
#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПриИзмененииРежимаРаботы();	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПриИзмененииРежимаРаботы()
	
	РежимРаботыНаКлиенте = (РежимРаботыНаКлиентеИлиНаСервере = 0);
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьВстроеннуюСхемуПриИзменении(Элемент)
	
	УстановитьВидимость();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗагрузитьСхемыXSD(Команда)
	
	СохранитьСхемуВХранилищеОбъекта(Ложь);	
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьСхемуНаДиск(Команда)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);	
	Диалог.Заголовок = "Выберите каталог";	
		
	ДополнительныеПараметры = Новый Структура("Диалог", Диалог);
	ОповещениеЗавершения = Новый ОписаниеОповещения("СохранитьВФайлЗавершение", ЭтотОбъект,
			ДополнительныеПараметры);
			
	Диалог.Показать(ОповещениеЗавершения);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПутьКПапкеСоСхемамиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);

	ДиалогВыбораФайла.Фильтр 		= "Архивный файл данных (*.zip)|*.zip";
	ДиалогВыбораФайла.Расширение 	= "zip";
		
	ДиалогВыбораФайла.Заголовок 					= НСтр("ru = 'Выберите файл'");
	ДиалогВыбораФайла.ПредварительныйПросмотр 		= Ложь;
	ДиалогВыбораФайла.ИндексФильтра 				= 0;
	ДиалогВыбораФайла.ПолноеИмяФайла 				= Элемент.ТекстРедактирования;
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла 	= Истина;
	ДиалогВыбораФайла.МножественныйВыбор			= Ложь;
	
	ДополнительныеПараметры = Новый Структура;	
	Оповещение = Новый ОписаниеОповещения("ДиалогВыбораФайлаОбработкаВыбора", ЭтотОбъект, ДополнительныеПараметры);
	ДиалогВыбораФайла.Показать(Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ДиалогВыбораФайлаОбработкаВыбора(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы = Неопределено ИЛИ НЕ ВыбранныеФайлы.Количество() Тогда
		Возврат;
	КонецЕсли;
	
	ПутьКАрхивуСоСхемамиXSD = ВыбранныеФайлы[0];
	
КонецПроцедуры

&НаСервере
Процедура СохранитьСхемуВХранилищеОбъектаНаСервере(АдресФайлаВоВременномХранилище, Расширение, Отказ)
	
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");
	
	Если РежимРаботыНаКлиенте Тогда		
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресФайлаВоВременномХранилище);		
	Иначе		
		ДвоичныеДанные = Новый ДвоичныеДанные(ПутьКАрхивуСоСхемамиXSD);		
	КонецЕсли;	
	
	МассивСхемXSD = Новый Массив;
	Попытка
		// Проверка архива 
		МенеджерXSD = Справочники.EUF_ПроводникСхемыXSD;
		ФабрикаИзФайловСхем = МенеджерXSD.СоздатьИзМассиваФайловФабрикуXDTO(ДвоичныеДанные, МассивСхемXSD);
		Если ТипЗнч(ФабрикаИзФайловСхем) <> Тип("ФабрикаXDTO") Тогда
			ТекстИсключения = "По файлам схем невозможно сформирвоать фабрику XDTO.";
			ВызватьИсключение ТекстИсключения;
		КонецЕсли;
	Исключение
		EUF_ПроводникШлюзБСПКлиентСервер.СообщитьПользователю(ОписаниеОшибки(),,,"ПутьКАрхивуСоСхемамиXSD", Отказ);
		Возврат;
	КонецПопытки;
	
	Если КакФайлZIP Тогда
		ТекущийОбъект.ХранилищеАрхиваСхемXSD = Новый ХранилищеЗначения(ДвоичныеДанные);	
	Иначе 
		СжатиеДанных = Новый СжатиеДанных(9);
		ТекущийОбъект.ХранилищеАрхиваСхемXSD = Новый ХранилищеЗначения(МассивСхемXSD, СжатиеДанных);
	КонецЕсли;	
	ТекущийОбъект.Записать();	
	ЗначениеВРеквизитФормы(ТекущийОбъект, "Объект");
		     
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимость()
	
	Элементы.ПутьКАрхивуСоСхемамиXSD.Видимость 	= НЕ РежимРаботыНаКлиенте;
	Элементы.ГруппаРасположенияАрхива.Видимость = НЕ Объект.ИспользоватьВстроеннуюСхему;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьСхемуВХранилищеОбъекта(Отказ)
	
	АдресФайлаВоВременномХранилище = "";
	
	ДополнительныеПараметры = Новый Структура("Отказ", Отказ);

	Если РежимРаботыНаКлиенте Тогда
		
		ОписаниеОповещения = Новый ОписаниеОповещения("СохранитьСхемуВХранилищеОбъектаЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		НачатьПомещениеФайла(ОписаниеОповещения,,,,УникальныйИдентификатор);
		
	Иначе
		
		Если ПустаяСтрока(ПутьКАрхивуСоСхемамиXSD) Тогда
			EUF_ПроводникШлюзБСПКлиентСервер.СообщитьПользователю(НСтр("ru = 'Путь к файлу не указан!'"),,,"ПутьКАрхивуСоСхемамиXSD", Отказ);
			Возврат;
		КонецЕсли;
		
		Если НЕ СтрЗаканчиваетсяНа(СокрЛП(ПутьКАрхивуСоСхемамиXSD), ".zip") тогда
			EUF_ПроводникШлюзБСПКлиентСервер.СообщитьПользователю(НСтр("ru = 'Неверный формат файла!'"),,,"ПутьКАрхивуСоСхемамиXSD", Отказ);
			Возврат;
		КонецЕсли;
		
		Файл = Новый Файл(ПутьКАрхивуСоСхемамиXSD);
		Если Не Файл.Существует() Тогда
			EUF_ПроводникШлюзБСПКлиентСервер.СообщитьПользователю(НСтр("ru = 'Файл не существует!'"),,,"ПутьКАрхивуСоСхемамиXSD", Отказ);
			Возврат;
		КонецЕсли;
		
		СохранитьСхемуВХранилищеОбъектаЗавершение(Истина, АдресФайлаВоВременномХранилище, ПутьКАрхивуСоСхемамиXSD, ДополнительныеПараметры);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьСхемуВХранилищеОбъектаЗавершение(Результат, Адрес, ВыбранноеИмяФайла, ДопПараметры) Экспорт
	
	Если Результат Тогда
		
		Отказ = ДопПараметры.Отказ;
		
		Файл = Новый Файл(ВыбранноеИмяФайла);
		Если Не Файл.Существует() Тогда
			
			ПутьКДанным = ?(РежимРаботыНаКлиенте, "", "ПутьКАрхивуСоСхемамиXSD");
			EUF_ПроводникШлюзБСПКлиентСервер.СообщитьПользователю(НСтр("ru = 'Файл не существует!'"),,,ПутьКДанным, Отказ);
			Возврат;
			
		КонецЕсли;
		
		СохранитьСхемуВХранилищеОбъектаНаСервере(Адрес, Файл.Расширение, Отказ);
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РежимРаботыНаКлиентеИлиНаСервереПриИзменении(Элемент)
	
	ПриИзмененииРежимаРаботы();	
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьВФайлЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Диалог = ДополнительныеПараметры.Диалог;
	
	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	ВыбранныйКаталог = Диалог.Каталог;
			
	МассивАдресовДляСхем = ПолучитьДанныеХранилищаНаСервере();
	
	Для Каждого АдресСхемы Из МассивАдресовДляСхем Цикл 
		ИмяФайла = Строка(Новый УникальныйИдентификатор());
		ПолноеИмяФайла = ВыбранныйКаталог + "\" + ИмяФайла + ".xsd";
		ПолучитьФайл(АдресСхемы, ПолноеИмяФайла, Ложь);		
	КонецЦикла;

КонецПроцедуры 

&НаСервере
Функция ПолучитьДанныеХранилищаНаСервере()
	
	СправочникОбъект = РеквизитФормыВЗначение("Объект");
	МассивСхемXSD = СправочникОбъект.ХранилищеАрхиваСхемXSD.Получить();
	МассивАдресовДляСхем = Новый Массив;  
	
	Если ТипЗнч(МассивСхемXSD) = Тип("Массив") Тогда
		Для Каждого СхемаXSD из МассивСхемXSD Цикл 
			
			АдресФайлаДанных = ПоместитьВоВременноеХранилище(СхемаXSD);
			МассивАдресовДляСхем.Добавить(АдресФайлаДанных);
			
		КонецЦикла;  	
	Иначе
		АдресФайлаДанных = ПоместитьВоВременноеХранилище(МассивСхемXSD);
		МассивАдресовДляСхем.Добавить(АдресФайлаДанных);
	КонецЕсли;
	
	Возврат МассивАдресовДляСхем;
	
КонецФункции

#КонецОбласти
 