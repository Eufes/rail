#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

// Функция возвращает фабрику XDTO из набора схем, по установкам элемента справочника
//
// Параметры:
//  СсылкаНаНаборСхем	 - СправочникСсылка.MultiPort_СхемыXSD - ссылка на элемент справочника
// 
// Возвращаемое значение:
//  ФабрикаXDTO - Фабрика полученная по данным элемента справочника схем
//
Функция ПолучитьИзНабораСхемФабрикуXDTO(СсылкаНаНаборСхем, ИзПакетаZIP = Ложь) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СхемыXSD.ХранилищеАрхиваСхемXSD КАК ХранилищеАрхиваСхемXSD
	|ИЗ
	|	Справочник.MultiPort_СхемыXSD КАК СхемыXSD
	|ГДЕ
	|	СхемыXSD.Ссылка = &СсылкаНаНаборСхем";
	Запрос.УстановитьПараметр("СсылкаНаНаборСхем", СсылкаНаНаборСхем);
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Выборка.Следующий(); 
	ЗначениеХранилищеСхемXSD = Выборка.ХранилищеАрхиваСхемXSD.Получить();		
		
	Если ИзПакетаZIP Тогда
		ФабрикаXDTOИзНабораСхем = СоздатьИзМассиваФайловФабрикуXDTO(ЗначениеХранилищеСхемXSD);
	Иначе
		ФабрикаXDTOИзНабораСхем = ПолучитьИзМассиваСхемФабрикуXDTO(ЗначениеХранилищеСхемXSD);
	КонецЕсли;
	
	Возврат ФабрикаXDTOИзНабораСхем;
	
КонецФункции

// Функция возвращает фабрику XDTO в случае когда в хранилище располагается непосредственно массив XSD
//
// Параметры:
//  СсылкаНаНаборСхем	 - СправочникСсылка.MultiPort_СхемыXSD - ссылка на элемент справочника
// 
// Возвращаемое значение:
//  ФабрикаXDTO - Фабрика полученная по данным элемента справочника схем
//
Функция ПолучитьИзМассиваСхемФабрикуXDTO(МассивСхемXSD) Экспорт
			
	НаборСхемXML = Новый НаборСхемXML;

	Для Каждого СхемаXSD из МассивСхемXSD Цикл 
	    	
		ЧтениеXML = Новый ЧтениеXML;
		ПараметрыЧтенияXML = Новый ПараметрыЧтенияXML(,,,,,,,, Истина, Истина);
		ЧтениеXML.УстановитьСтроку(СхемаXSD, ПараметрыЧтенияXML);
		ПостроительDOM 	= Новый ПостроительDOM;		
		ДокументDOM 	= ПостроительDOM.Прочитать(ЧтениеXML); 	
		ПостроительСхемыXML = Новый ПостроительСхемXML;  	
		СхемаXML 			= ПостроительСхемыXML.СоздатьСхемуXML(ДокументDOM);		
		НаборСхемXML.Добавить(СхемаXML);
		
	КонецЦикла; 
		
	ФабрикаXDTOИзНабораСхем = Новый ФабрикаXDTO(НаборСхемXML);
		
	Возврат ФабрикаXDTOИзНабораСхем;
	
КонецФункции

// Функция создает фабрику XDTO из списка файлов XSD
//
// Параметры:
//  СхемыКакДвоичныеДанные	 - ДвоичныеДанные - двоичные данные всего набора
//  МассивСхемXSD			 - Массив - Массив схем xsd который будет заполнен из файлов
// 
// Возвращаемое значение:
//  ФабрикаXDTO - фабрика по файлам схем
//
Функция СоздатьИзМассиваФайловФабрикуXDTO(СхемыКакДвоичныеДанные, МассивСхемXSD = Неопределено) Экспорт
	
	Если МассивСхемXSD = Неопределено Тогда
		МассивСхемXSD = Новый Массив;
	КонецЕсли;	
	ИмяАрхива = ПолучитьИмяВременногоФайла("zip");
	СхемыКакДвоичныеДанные.Записать(ИмяАрхива);
		
	ИмяКаталога = СтрЗаменить(ИмяАрхива, ".zip", "_zip");	
	СоздатьКаталог(ИмяКаталога);
	Архив = Новый ЧтениеZipФайла(ИмяАрхива);
	Архив.ИзвлечьВсе(ИмяКаталога, РежимВосстановленияПутейФайловZIP.НеВосстанавливать);
	УдалитьФайлы(ИмяАрхива);	
	МассивФайловXSD = НайтиФайлы(ИмяКаталога, "*.xsd", Ложь); 
	
	НаборСхемXML = Новый НаборСхемXML;

	Для Каждого ФайлXSD из МассивФайловXSD Цикл 
	    	
		ЧтениеXML = Новый ЧтениеXML;
		ЧтениеXML.ОткрытьФайл(ФайлXSD.ПолноеИмя);
		ПостроительDOM 	= Новый ПостроительDOM;		
		ДокументDOM 	= ПостроительDOM.Прочитать(ЧтениеXML); 	
		ПостроительСхемыXML = Новый ПостроительСхемXML;  	
		СхемаXML 			= ПостроительСхемыXML.СоздатьСхемуXML(ДокументDOM);		
		НаборСхемXML.Добавить(СхемаXML); 
		
		ТекстСхемыДок = Новый ТекстовыйДокумент;
		ТекстСхемыДок.Прочитать(ФайлXSD.ПолноеИмя);
		ТекстСхемы = ТекстСхемыДок.ПолучитьТекст();
		МассивСхемXSD.Добавить(ТекстСхемы);
		
	КонецЦикла; 
	
	Архив.Закрыть();
		
	ФабрикаXDTOИзНабораСхем = Новый ФабрикаXDTO(НаборСхемXML);
		
	Возврат ФабрикаXDTOИзНабораСхем;
	
КонецФункции

#КонецЕсли