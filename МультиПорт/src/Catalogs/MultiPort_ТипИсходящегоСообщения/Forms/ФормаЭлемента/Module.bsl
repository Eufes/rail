	 
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЭтоНовый = Параметры.Ключ.Пустая();
	УстановитьПараметрыДинамическихСписков(ЭтоНовый);

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
  	УстановитьПараметрыДинамическихСписков();
   
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ) 
	
	ДоступностьПоляИнтеграционныйПроцесс();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Справочники.MultiPort_ТипИсходящегоСообщения.ИдентификаторТипаИсходящегоУникален(ТекущийОбъект, Отказ);
	Если Отказ Тогда
		Возврат;			
	КонецЕсли;	
	
	ТекущийОбъект.ДополнительныеСвойства.Вставить("ПроверкаВыполнена", Истина);	
	
КонецПроцедуры

#КонецОбласти
 
#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТехническоеИмяНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь; 
	ТекстВопроса = "Будет сгенерирован идентификатор в транслите от текущего наименования.
	| Если он был сгенерирован ранее, то изменять его рекомендуется только при уверенности корректного обращения к нему.
	| Контроль уникальности в пределах базы определяется во время записи. ПРОДОЛЖИТЬ?";
	ОписаниеОповещения = Новый ОписаниеОповещения("ТехническоеИмяНачалоВыбораЗавершение", ЭтотОбъект);
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);	
	
КонецПроцедуры

&НаКлиенте
Процедура ТехническоеИмяНачалоВыбораЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаЛатиницей = MultiPort_ШлюзБСПКлиентСервер.СтрокаЛатиницей(Объект.Наименование);	
	СтрокаЛатиницей = СокрЛП(СтрокаЛатиницей);
	СтрокаЛатиницей = СтрЗаменить(СтрокаЛатиницей, " ", "_");
	Объект.ТехническоеИмя = НРег(СтрокаЛатиницей);
	
КонецПроцедуры

&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)	
	ДоступностьПоляИнтеграционныйПроцесс();	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыИспользуемыеНастройки

&НаКлиенте
Процедура ИспользуемыеНастройкиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекДанные = Элемент.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ПоказатьЗначение(, Элемент.ТекущиеДанные.НастройкаДляСообщения);

КонецПроцедуры

&НаКлиенте
Процедура ИспользуемыеНастройкиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)

	Отказ = Истина;
	Если Параметры.Ключ.Пустая() Тогда		
		ОписаниеОповещения = Новый ОписаниеОповещения("ДобавлениеНастроекЗавершение", ЭтотОбъект);
		ТекстВопроса = "Перед добавлением настроек необходимо сначала записать объект. Записать?";
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет); 
	Иначе
		ДобавитьНастройку();
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавлениеНастроекЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
        Возврат;
	КонецЕсли;
	
	Записать();
	ДобавитьНастройку();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьНастройку()
	
	ПараметрыЗаписи = Новый Структура("ИзФормыСЗаданнымТипом", Истина);
	СтруктураЗаполнения = Новый Структура("ТипСообщения", Объект.Ссылка);
	ПараметрыЗаписи.Вставить("ЗначенияЗаполнения", СтруктураЗаполнения);
	
	ПослеДобавления = Новый ОписаниеОповещения("ПослеДобавленияНастройки", ЭтотОбъект);
	
	ОткрытьФорму("РегистрСведений.MultiPort_ИспользуемыеНастройкиДляСообщений.Форма.ФормаЗаписи",
			ПараметрыЗаписи, ЭтотОбъект, , , , ПослеДобавления, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
КонецПроцедуры 

&НаКлиенте
Процедура ПослеДобавленияНастройки(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	ЭтотОбъект.Прочитать();
			
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьПараметрыДинамическихСписков(ЭтоНовый = Ложь);
	
	Если ЭтоНовый Тогда
		ЗначениеОтбора = Неопределено;
	Иначе	
		ЗначениеОтбора = Объект.Ссылка;
	КонецЕсли;
	
	ПараметрТекущиеНастройки = ДС_ИспользуемыеНастройки.Параметры.Элементы.Найти("ТипСообщения");
	ПараметрТекущиеНастройки.Использование = Истина;
	ПараметрТекущиеНастройки.Значение = ЗначениеОтбора;
	
КонецПроцедуры 

&НаКлиенте
Процедура ДоступностьПоляИнтеграционныйПроцесс()
	
	ДоступностьИП = ЗначениеЗаполнено(Объект.Владелец);
	Элементы.ИнтеграционныйПроцесс.Доступность = ДоступностьИП;
	
КонецПроцедуры

#КонецОбласти
 