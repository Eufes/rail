#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
		
	Если ПометкаУдаления Тогда
		ОбменВключен = Ложь;
	КонецЕсли;
	
	Если КоличествоУдаляемыхСообщений = 0 Тогда
		КоличествоУдаляемыхСообщений = 1;
	КонецЕсли;
	
	МетаданныеРеглЗадания = Метаданные.РегламентныеЗадания.MultiPort_ПодготовкаИсходящих;	
	ПодготовитьРеглЗадания(ИДРеглЗаданияПодготовкаИсходящих, МетаданныеРеглЗадания,
							"Подготовка исходящих", "РасписаниеПодготовкаИсходящихНовое");
	
	МетаданныеРеглЗадания = Метаданные.РегламентныеЗадания.MultiPort_ОтправкаИсходящих;	
	ПодготовитьРеглЗадания(ИДРеглЗаданияОтправкаИсходящих, МетаданныеРеглЗадания,
							"Отправка исходящих", "РасписаниеОтправкаИсходящихНовое");
	
	Если Не ЭтотУзел Тогда
		МетаданныеРеглЗадания = Метаданные.РегламентныеЗадания.MultiPort_ОбработкаВходящих;	
		ПодготовитьРеглЗадания(ИДРеглЗаданияОбработкаВходящих, МетаданныеРеглЗадания,
							"Обработка входящих", "РасписаниеОбработкаВходящихНовое");
		
		МетаданныеРеглЗадания = Метаданные.РегламентныеЗадания.MultiPort_УдалениеНеактуальныхДанных;	
		ПодготовитьРеглЗадания(ИДРеглЗаданияУдалениеСообщений, МетаданныеРеглЗадания,
							"Удаление сообщений", "РасписаниеУдалениеНеактуальныхСообщенийНовое");
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры	

Процедура ПриЗаписи(Отказ)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ОбменВключен Тогда
		ВключитьРеглЗадание(ИДРеглЗаданияПодготовкаИсходящих, "РасписаниеПодготовкаИсходящихВключено");
		ВключитьРеглЗадание(ИДРеглЗаданияОтправкаИсходящих, "РасписаниеОтправкаИсходящихВключено");
		Если Не ЭтотУзел Тогда
			ВключитьРеглЗадание(ИДРеглЗаданияОбработкаВходящих, "РасписаниеОбработкаВходящихВключено");
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЭтотУзел Тогда
		ВключитьРеглЗадание(ИДРеглЗаданияУдалениеСообщений, "РасписаниеУдалениеНеактуальныхСообщенийВключено");
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПодготовитьРеглЗадания(ИДРеглЗадания, МетаданныеРеглЗадания, ИмяДействияРеглЗадания, ИмяНовогоРасписания)
	
	Если ОбменВключен И ДополнительныеСвойства.Свойство(ИмяНовогоРасписания) Тогда		
		
		Если Не ЗначениеЗаполнено(ИДРеглЗадания) Тогда
			РегламентноеЗадание = РегламентныеЗадания.СоздатьРегламентноеЗадание(МетаданныеРеглЗадания);
		Иначе
			РегламентноеЗадание = РегламентныеЗадания.НайтиПоУникальномуИдентификатору(ИДРеглЗадания);
			Если РегламентноеЗадание = Неопределено Тогда
				РегламентноеЗадание = РегламентныеЗадания.СоздатьРегламентноеЗадание(МетаданныеРеглЗадания);
			КонецЕсли;
		КонецЕсли;
		РегламентноеЗадание.Наименование = СтрШаблон("(MultiPort) Внешняя система %1 %2", Код, ИмяДействияРеглЗадания);
		РегламентноеЗадание.ИмяПользователя = ИмяПользователяРеглЗаданий;
		РегламентноеЗадание.Использование = Ложь;
		РегламентноеЗадание.Записать();
		ИДРеглЗадания = РегламентноеЗадание.УникальныйИдентификатор;
		
	Иначе
		Если ЗначениеЗаполнено(ИДРеглЗадания) Тогда
			РегламентноеЗадание = РегламентныеЗадания.НайтиПоУникальномуИдентификатору(ИДРеглЗадания);
			Если РегламентноеЗадание <> Неопределено Тогда
				РегламентноеЗадание.Использование = Ложь;
				РегламентноеЗадание.Записать();				
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство(ИмяНовогоРасписания) И ЗначениеЗаполнено(ИДРеглЗадания) Тогда
		РегламентноеЗадание = РегламентныеЗадания.НайтиПоУникальномуИдентификатору(ИДРеглЗадания);
		Если РегламентноеЗадание <> Неопределено Тогда
			ЧтениеJSON = Новый ЧтениеJSON;
			ЧтениеJSON.УстановитьСтроку(ДополнительныеСвойства[ИмяНовогоРасписания]);
			Расписание = СериализаторXDTO.ПрочитатьJSON(ЧтениеJSON, Тип("РасписаниеРегламентногоЗадания"));
			РегламентноеЗадание.Расписание = Расписание;
			РегламентноеЗадание.Записать();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры	

Процедура ВключитьРеглЗадание(ИДРеглЗадания, ИмяРеквизитаРасписаниеВключено)
	
	Если Не ДополнительныеСвойства.Свойство(ИмяРеквизитаРасписаниеВключено) Тогда
		РасписаниеВключено = Ложь;
	Иначе
		РасписаниеВключено = ДополнительныеСвойства[ИмяРеквизитаРасписаниеВключено];
	КонецЕсли;
	
	РегламентноеЗадание = РегламентныеЗадания.НайтиПоУникальномуИдентификатору(ИДРеглЗадания);
	Если РегламентноеЗадание <> Неопределено Тогда
		
		РасписаниеВключено = ДополнительныеСвойства[ИмяРеквизитаРасписаниеВключено];
		РегламентноеЗадание.Использование = РасписаниеВключено;
		РегламентноеЗадание.Параметры.Очистить();
		РегламентноеЗадание.Параметры.Добавить(Ссылка);
		РегламентноеЗадание.Параметры.Добавить(ИДРеглЗадания);
		РегламентноеЗадание.Записать();
	КонецЕсли;
		
КонецПроцедуры	

#КонецОбласти

#КонецЕсли